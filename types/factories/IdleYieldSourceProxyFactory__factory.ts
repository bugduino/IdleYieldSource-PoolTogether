/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { IdleYieldSourceProxyFactory } from "../IdleYieldSourceProxyFactory";

export class IdleYieldSourceProxyFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _instance: string,
    _iGenericProxyFactory: string,
    overrides?: Overrides
  ): Promise<IdleYieldSourceProxyFactory> {
    return super.deploy(
      _instance,
      _iGenericProxyFactory,
      overrides || {}
    ) as Promise<IdleYieldSourceProxyFactory>;
  }
  getDeployTransaction(
    _instance: string,
    _iGenericProxyFactory: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _instance,
      _iGenericProxyFactory,
      overrides || {}
    );
  }
  attach(address: string): IdleYieldSourceProxyFactory {
    return super.attach(address) as IdleYieldSourceProxyFactory;
  }
  connect(signer: Signer): IdleYieldSourceProxyFactory__factory {
    return super.connect(signer) as IdleYieldSourceProxyFactory__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IdleYieldSourceProxyFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IdleYieldSourceProxyFactory;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_iGenericProxyFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_idleToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_iIdleTokenHelper",
        type: "address",
      },
    ],
    name: "createNewProxy",
    outputs: [
      {
        internalType: "address",
        name: "instanceCreated",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "iGenericProxyFactory",
    outputs: [
      {
        internalType: "contract IGenericProxyFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idleYieldSourceInstance",
    outputs: [
      {
        internalType: "contract IdleYieldSource",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107a43803806107a4833981810160405281019061003291906100cf565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b6000815190506100c98161013d565b92915050565b600080604083850312156100e257600080fd5b60006100f0858286016100ba565b9250506020610101858286016100ba565b9150509250929050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b610641806101636000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806364a93264146100465780636a4e77cf14610064578063a25d79c514610095575b600080fd5b61004e6100b3565b60405161005b9190610454565b60405180910390f35b61007e60048036038101906100799190610305565b6100d9565b60405161008c929190610424565b60405180910390f35b61009d61024f565b6040516100aa919061046f565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3f697ba60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868660405160240161014f9291906103fb565b6040516020818303038152906040527f485cc955000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b81526004016101e9929190610424565b600060405180830381600087803b15801561020357600080fd5b505af1158015610217573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102409190610341565b80925081935050509250929050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610286610281846104bb565b61048a565b90508281526020810184848401111561029e57600080fd5b6102a9848285610581565b509392505050565b6000813590506102c0816105f4565b92915050565b6000815190506102d5816105f4565b92915050565b600082601f8301126102ec57600080fd5b81516102fc848260208601610273565b91505092915050565b6000806040838503121561031857600080fd5b6000610326858286016102b1565b9250506020610337858286016102b1565b9150509250929050565b6000806040838503121561035457600080fd5b6000610362858286016102c6565b925050602083015167ffffffffffffffff81111561037f57600080fd5b61038b858286016102db565b9150509250929050565b61039e81610507565b82525050565b60006103af826104eb565b6103b981856104f6565b93506103c9818560208601610581565b6103d2816105e3565b840191505092915050565b6103e681610539565b82525050565b6103f58161055d565b82525050565b60006040820190506104106000830185610395565b61041d6020830184610395565b9392505050565b60006040820190506104396000830185610395565b818103602083015261044b81846103a4565b90509392505050565b600060208201905061046960008301846103dd565b92915050565b600060208201905061048460008301846103ec565b92915050565b6000604051905081810181811067ffffffffffffffff821117156104b1576104b06105b4565b5b8060405250919050565b600067ffffffffffffffff8211156104d6576104d56105b4565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061051282610519565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105448261054b565b9050919050565b600061055682610519565b9050919050565b60006105688261056f565b9050919050565b600061057a82610519565b9050919050565b60005b8381101561059f578082015181840152602081019050610584565b838111156105ae576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105fd81610507565b811461060857600080fd5b5056fea26469706673582212207653ca7d52f7da141d6319459e3a55387103e62d88be644d4fd5d668b4ea9cdf64736f6c63430008000033";
