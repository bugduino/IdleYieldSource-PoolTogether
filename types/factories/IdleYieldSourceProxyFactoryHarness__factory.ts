/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { IdleYieldSourceProxyFactoryHarness } from "../IdleYieldSourceProxyFactoryHarness";

export class IdleYieldSourceProxyFactoryHarness__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _instance: string,
    _iGenericProxyFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IdleYieldSourceProxyFactoryHarness> {
    return super.deploy(
      _instance,
      _iGenericProxyFactory,
      overrides || {}
    ) as Promise<IdleYieldSourceProxyFactoryHarness>;
  }
  getDeployTransaction(
    _instance: string,
    _iGenericProxyFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _instance,
      _iGenericProxyFactory,
      overrides || {}
    );
  }
  attach(address: string): IdleYieldSourceProxyFactoryHarness {
    return super.attach(address) as IdleYieldSourceProxyFactoryHarness;
  }
  connect(signer: Signer): IdleYieldSourceProxyFactoryHarness__factory {
    return super.connect(signer) as IdleYieldSourceProxyFactoryHarness__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IdleYieldSourceProxyFactoryHarness {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IdleYieldSourceProxyFactoryHarness;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_iGenericProxyFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_idleToken",
        type: "address",
      },
    ],
    name: "createNewProxy",
    outputs: [
      {
        internalType: "address",
        name: "instanceCreated",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "iGenericProxyFactory",
    outputs: [
      {
        internalType: "contract IGenericProxyFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idleYieldSourceInstance",
    outputs: [
      {
        internalType: "contract IdleYieldSourceHarness",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161074f38038061074f833981810160405281019061003291906100cf565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b6000815190506100c98161013d565b92915050565b600080604083850312156100e257600080fd5b60006100f0858286016100ba565b9250506020610101858286016100ba565b9150509250929050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b6105ec806101636000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634f9ccab81461004657806364a9326414610077578063a25d79c514610095575b600080fd5b610060600480360381019061005b9190610272565b6100b3565b60405161006e929190610378565b60405180910390f35b61007f610196565b60405161008c91906103d6565b60405180910390f35b61009d6101bc565b6040516100aa91906103f1565b60405180910390f35b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3f697ba60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161013291906103a8565b600060405180830381600087803b15801561014c57600080fd5b505af1158015610160573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610189919061029b565b8092508193505050915091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006101f36101ee84610431565b61040c565b90508281526020810184848401111561020b57600080fd5b6102168482856104f8565b509392505050565b60008135905061022d8161059f565b92915050565b6000815190506102428161059f565b92915050565b600082601f83011261025957600080fd5b81516102698482602086016101e0565b91505092915050565b60006020828403121561028457600080fd5b60006102928482850161021e565b91505092915050565b600080604083850312156102ae57600080fd5b60006102bc85828601610233565b925050602083015167ffffffffffffffff8111156102d957600080fd5b6102e585828601610248565b9150509250929050565b6102f88161047e565b82525050565b600061030982610462565b610313818561046d565b93506103238185602086016104f8565b61032c8161058b565b840191505092915050565b610340816104b0565b82525050565b61034f816104d4565b82525050565b600061036260008361046d565b915061036d8261059c565b600082019050919050565b600060408201905061038d60008301856102ef565b818103602083015261039f81846102fe565b90509392505050565b60006040820190506103bd60008301846102ef565b81810360208301526103ce81610355565b905092915050565b60006020820190506103eb6000830184610337565b92915050565b60006020820190506104066000830184610346565b92915050565b6000610416610427565b9050610422828261052b565b919050565b6000604051905090565b600067ffffffffffffffff82111561044c5761044b61055c565b5b6104558261058b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061048982610490565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104bb826104c2565b9050919050565b60006104cd82610490565b9050919050565b60006104df826104e6565b9050919050565b60006104f182610490565b9050919050565b60005b838110156105165780820151818401526020810190506104fb565b83811115610525576000848401525b50505050565b6105348261058b565b810181811067ffffffffffffffff821117156105535761055261055c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b50565b6105a88161047e565b81146105b357600080fd5b5056fea2646970667358221220dd1649d827003f0f853f0b92f1410477b4a2809f187c4d91228895d519f11dcf64736f6c63430008040033";
